import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump icL.Editor 1.0 ./bin/debug/linux/'

Module {
    dependencies: [
        "QtGraphicalEffects 1.0",
        "QtQuick 2.8",
        "QtQuick.Window 2.1",
        "icL.Look 1.0"
    ]
    Component {
        name: "icL::editor::Drawing"
        defaultProperty: "data"
        prototype: "icL::editor::Logic"
        Property { name: "style"; type: "icL::look::EditorStyle"; isPointer: true }
        Property { name: "chars"; type: "icL::look::Chars"; isPointer: true }
        Property { name: "lineN"; type: "icL::editor::LineNumbers"; isPointer: true }
        Property { name: "lnWidth"; type: "int"; isReadonly: true }
        Signal {
            name: "styleChanged"
            Parameter { name: "style"; type: "look::EditorStyle"; isPointer: true }
        }
        Signal {
            name: "charsChanged"
            Parameter { name: "chars"; type: "look::Chars"; isPointer: true }
        }
        Signal {
            name: "lineNChanged"
            Parameter { name: "lineN"; type: "LineNumbers"; isPointer: true }
        }
        Signal {
            name: "lnWidthChanged"
            Parameter { name: "lnWidth"; type: "int" }
        }
        Signal { name: "requestRepaint" }
        Method {
            name: "setStyle"
            Parameter { name: "style"; type: "look::EditorStyle"; isPointer: true }
        }
        Method {
            name: "setChars"
            Parameter { name: "chars"; type: "look::Chars"; isPointer: true }
        }
        Method {
            name: "setLineN"
            Parameter { name: "lineN"; type: "LineNumbers"; isPointer: true }
        }
    }
    Component {
        name: "icL::editor::EditorInternal"
        defaultProperty: "data"
        prototype: "icL::editor::Mouse"
        exports: ["EditorInternal 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "icL::editor::History"
        defaultProperty: "data"
        prototype: "icL::editor::Drawing"
    }
    Component {
        name: "icL::editor::Keyboard"
        defaultProperty: "data"
        prototype: "icL::editor::History"
    }
    Component {
        name: "icL::editor::LineNumbers"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["LineNumbers 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setEditor"
            Parameter { name: "editor"; type: "icL::editor::EditorInternal"; isPointer: true }
        }
    }
    Component {
        name: "icL::editor::Logic"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        Method {
            name: "setFirst"
            Parameter { name: "first"; type: "Line"; isPointer: true }
        }
        Method {
            name: "setCurrent"
            Parameter { name: "current"; type: "Line"; isPointer: true }
        }
        Method {
            name: "setFirstVisible"
            Parameter { name: "firstVisible"; type: "Line"; isPointer: true }
        }
        Method {
            name: "setLastVisible"
            Parameter { name: "lastVisible"; type: "Line"; isPointer: true }
        }
        Method {
            name: "addNewLine"
            Parameter { name: "line"; type: "Line"; isPointer: true }
            Parameter { name: "focus"; type: "bool" }
        }
        Method {
            name: "addNewLine"
            Parameter { name: "line"; type: "Line"; isPointer: true }
        }
        Method { name: "updateCurrentLine" }
        Method {
            name: "loadFile"
            type: "bool"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "icL::editor::Mouse"
        defaultProperty: "data"
        prototype: "icL::editor::Keyboard"
    }
    Component {
        name: "icL::editor::OpacityMask"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["EditorOpacityMask 1.0"]
        exportMetaObjectRevisions: [0]
        Method {
            name: "setEditor"
            Parameter { name: "editor"; type: "icL::editor::EditorInternal"; isPointer: true }
        }
    }
}
