import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump icL.Toolkit 1.0 ./bin/debug/linux/'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        name: "icL::toolkit::panels::BasePanels"
        prototype: "QObject"
        Property { name: "navigationBar"; type: "bool" }
        Property { name: "orientationH"; type: "bool" }
        Signal {
            name: "navigationBarChanged"
            Parameter { name: "navigationBar"; type: "bool" }
        }
        Signal {
            name: "orientationHChanged"
            Parameter { name: "orientationH"; type: "bool" }
        }
        Method {
            name: "setNavigationBar"
            Parameter { name: "navigationBar"; type: "bool" }
        }
        Method {
            name: "setOrientationH"
            Parameter { name: "orientationH"; type: "bool" }
        }
    }
    Component {
        name: "icL::toolkit::panels::Browser"
        prototype: "icL::toolkit::panels::BasePanels"
        Property { name: "leftPanel"; type: "bool" }
        Property { name: "devTools"; type: "bool" }
        Signal {
            name: "leftPanelChanged"
            Parameter { name: "leftPanel"; type: "bool" }
        }
        Signal {
            name: "devToolsChanged"
            Parameter { name: "devTools"; type: "bool" }
        }
        Method {
            name: "setLeftPanel"
            Parameter { name: "leftPanel"; type: "bool" }
        }
        Method {
            name: "setDevTools"
            Parameter { name: "devTools"; type: "bool" }
        }
    }
    Component {
        name: "icL::toolkit::panels::Code"
        prototype: "icL::toolkit::panels::BasePanels"
        Property { name: "leftPanel"; type: "bool" }
        Property { name: "browser"; type: "bool" }
        Signal {
            name: "leftPanelChanged"
            Parameter { name: "leftPanel"; type: "bool" }
        }
        Signal {
            name: "browserChanged"
            Parameter { name: "browser"; type: "bool" }
        }
        Method {
            name: "setLeftPanel"
            Parameter { name: "leftPanel"; type: "bool" }
        }
        Method {
            name: "setBrowser"
            Parameter { name: "browser"; type: "bool" }
        }
    }
    Component {
        name: "icL::toolkit::panels::Debug"
        prototype: "icL::toolkit::panels::BasePanels"
        Property { name: "stack"; type: "bool" }
        Property { name: "state"; type: "bool" }
        Property { name: "console"; type: "bool" }
        Property { name: "browser"; type: "bool" }
        Signal {
            name: "stackChanged"
            Parameter { name: "stack"; type: "bool" }
        }
        Signal {
            name: "stateChanged"
            Parameter { name: "state"; type: "bool" }
        }
        Signal {
            name: "consoleChanged"
            Parameter { name: "console"; type: "bool" }
        }
        Signal {
            name: "browserChanged"
            Parameter { name: "browser"; type: "bool" }
        }
        Method {
            name: "setStack"
            Parameter { name: "stack"; type: "bool" }
        }
        Method {
            name: "setState"
            Parameter { name: "state"; type: "bool" }
        }
        Method {
            name: "setConsole"
            Parameter { name: "console"; type: "bool" }
        }
        Method {
            name: "setBrowser"
            Parameter { name: "browser"; type: "bool" }
        }
    }
    Component {
        name: "icL::toolkit::panels::Panels"
        prototype: "QObject"
        exports: ["Panels 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "browser"; type: "Browser"; isReadonly: true; isPointer: true }
        Property { name: "code"; type: "Code"; isReadonly: true; isPointer: true }
        Property { name: "debug"; type: "Debug"; isReadonly: true; isPointer: true }
        Property { name: "projectsOrFiles"; type: "bool" }
        Signal {
            name: "browserChanged"
            Parameter { name: "browser"; type: "Browser"; isPointer: true }
        }
        Signal {
            name: "codeChanged"
            Parameter { name: "code"; type: "Code"; isPointer: true }
        }
        Signal {
            name: "debugChanged"
            Parameter { name: "debug"; type: "Debug"; isPointer: true }
        }
        Signal {
            name: "projectsOrFilesChanged"
            Parameter { name: "projectsOrFiles"; type: "bool" }
        }
        Method {
            name: "setProjectsOrFiles"
            Parameter { name: "projectsOrFiles"; type: "bool" }
        }
        Method {
            name: "loadConf"
            type: "bool"
            Parameter { name: "path"; type: "string" }
        }
        Method { name: "saveConf"; type: "bool" }
    }
}
