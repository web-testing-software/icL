%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: icL
file_extensions:
  - icL
  - icL-Pro
scope: source.icL
contexts:
  main:
    - match: \b(now|if|else|for|filter|range|exists|while|do|any|emit|emiter|slot|assert|listen|wait|jammer|switch|case)\b
      scope: keyword.control.icL

    - match: \b(bool|int|double|string|list|element|set|item|object|void|regex|datetime|session|window|cookie|tab|document|file|query|database|dbmanager|js-file|code-(icl|js|sql)|handler|any|type)\b
      scope: meta.type.icL

    - match: \b(icL|Log|Tab|Document|Import|true|false|Numbers|Types|Key|Alert|By|DSV|Sessions?|Windows?|Cookies|Tabs?|Files?|Make|Math|Wait|Mouse|Move|Stacks?|State|DB|Query|DBManager|Code|Signal|Datetime)\b
      scope: meta.class.icL

    - match: \'[\w\-\*]+
      scope: variable.other.member.icL

    - match: (sql){
      captures:
        1: entity.name.function.icL
      push: sql_code

    - match: (icl)(:pro)?{
      captures:
        1: entity.name.function.icL
        2: entity.name.tag.icL

    - match: \.\w+
      scope: entity.name.function.icL

    - match: \b(emit|slot)(:\w+)\b
      captures:
        1: keyword.control.icL
        2: entity.name.tag.icL

    - match: \b(css)(:all|:try((\d+)m?s)?|:wait(\d+m?s))?(@\w*)?(\[)
      captures:
        1: entity.name.tag.icL
        2: entity.other.attribute-name.icL
        3: entity.other.attribute-name.icL
        4: constant.numeric.icL
        5: constant.numeric.icL
        6: variable.other
        7: source.icL
      push: web_element

    - match: \b(xpath)(:all|:try((\d+)m?s)?|:wait(\d+m?s))?(@\w*)?\[(.*?)\]
      captures:
        1: entity.name.tag.icL
        2: entity.other.attribute-name.icL
        3: entity.other.attribute-name.icL
        4: constant.numeric.icL
        5: constant.numeric.icL
        6: variable.other
        7: string.quoted.single

    - match: \b(link)(:fragment|:try((\d+)m?s)?|:wait(\d+m?s))?(@\w*)?\[(.*?)\]
      captures:
        1: entity.name.tag.icL
        2: entity.other.attribute-name.icL
        3: entity.other.attribute-name.icL
        4: constant.numeric.icL
        5: constant.numeric.icL
        6: variable.other
        7: string.quoted.single

    - match: \b(links)(:fragment)?(@\w*)?\[(.*?)\]
      captures:
        1: entity.name.tag.icL
        2: entity.other.attribute-name.icL
        3: variable.other
        4: string.quoted.single

    - match: \b(tag|button|input|field|h[1-6]|legend|span)(:try((\d+)m?s)?|:wait(\d+m?s))?(@\w*)?\[(.*?)\]
      captures:
        1: entity.name.tag.icL
        2: entity.other.attribute-name.icL
        3: entity.other.attribute-name.icL
        4: constant.numeric.icL
        5: constant.numeric.icL
        6: variable.other
        7: string.quoted.single

    - match: \b(tags)(@\w*)?\[(.*?)\]
      captures:
        1: entity.name.tag.icL
        2: variable.other
        3: string.quoted.single

    - match: \b(web)\[\]
      captures:
        1: entity.name.tag.icL

    - match: \b(js)(:value)?(@\w+)?{
      captures:
        1: entity.name.tag.icL
        2: entity.other.attribute-name.icL
        3: variable.other.icL
      push: js_code

    - match: \b(js)(:file)\[(.*?)\]
      captures:
        1: entity.name.tag.icL
        2: entity.other.attribute-name.icL
        3: string.quoted.single

    - match: \$\w+
      scope: support.function.icL

    - match: \@\w*
      scope: variable.other.icL

    - match: \#\w+
      scope: variable.language.icL

    - match: \#
      scope: variable.other.icL

    - match: :(not|alive|ignore|ajax|(\d+)m?s|alt|ever|(\d+)times|reverse|max(\d+)|min(\d+)|all|fragment|try(\d+)m?s|try|wait(\d+)m?s)\b
      captures:
        1: entity.other.attribute-name.icL
        2: constant.numeric.icL
        3: constant.numeric.icL
        4: constant.numeric.icL
        5: constant.numeric.icL
        6: constant.numeric.icL
        7: constant.numeric.icL
      scope: entity.other.attribute-name.icL

    - match: \b\d+(\.\d+)?\b
      scope: constant.numeric.icL

    - match: (//.*?//|/:.*?:/|/\$.*?\$/|/".*?"/)(\w*)
      captures:
        1: string.regexp.icL
        2: string.quoted.other.icL

    - match: \b(sessions|windows|tabs|cookies|alert|tabs|css|xpath|links?|tags?|button|input|field|web|h[1-6]|legend|span)\b
      scope: variable.language.icL

    - match: '"'
      scope: punctuation.definition.string.begin.icL
      push: string

    - match: '```'
      scope: punctuation.definition.comment.icL
      set:
        - meta_scope: comment.block.icL
        - match: '```'
          pop: true

    - match: '``'
      scope: punctuation.definition.comment.icL
      set:
        - meta_scope: comment.line.icL
        - match: $
          pop: true

    - match: '`'
      scope: punctuation.definition.comment.icL
      set:
        - meta_scope: comment.line.icL
        - match: $
          pop: true
        - match: '`'
          pop: true

    - match: :\[
      scope: source
      set:
        - meta_scope: source

        - match: \]
          pop: true

        - match: \b(not|alive|ignore|ajax|(\d+)m?s|alt|ever|(\d+)times|reverse|max(\d+)|min(\d+)|all|fragment|try(\d+)m?s|try|wait(\d+)m?s)\b
          captures:
            1: entity.other.attribute-name.icL
            2: constant.numeric.icL
            3: constant.numeric.icL
            4: constant.numeric.icL
            5: constant.numeric.icL
            6: constant.numeric.icL
            7: constant.numeric.icL
          scope: entity.other.attribute-name.icL

    - match: \(
      scope: source
      set:
        - meta_scope: source

        - match: \)
          pop: true

        - include: main

        - match: \w+
          scope: variable.other.member.icL

    - match: \[
      scope: source
      set:
        - meta_scope: source

        - match: \]
          pop: true

        - include: main

        - match: \w+
          scope: variable.other.member.icL
          
  string:
    - meta_scope: string.quoted.single

    - match: \\.
      scope: constant.character.escape

    - match: '"'
      scope: punctuation.definition.string.end
      pop: true

  sql_code:
    - match: \b(SELECT|FROM|WHERE|LIMIT|INSERT|INTO|VALUE)\b
      scope: keyword.control.icL

    - match: \@:[\w\_]+
      scope: variable.other.icL

    - match: \#:[\w\_]+
      scope: variable.language.icL

    - match: :[\w\_]+
      scope: variable.other.icL

    - match: ([\w\_]+)\s*\(
      captures:
        1: entity.name.function.icL

    - match: '}'
      pop: true

  web_element:
    - match: \.[\w\-\_]+
      scope: entity.name.class.icL

    - match: \#[\w\-\_]+
      scope: entity.name.struct.icL

    - match: (\:[\w\-\_]+)\s*\(
      captures:
        1: entity.name.function.icL

    - match: \:[\w\-\_]+
      scope: entity.name.enum.icL

    - match: \b([\w\-\_]+)=[^\w]?([\w\-\_]+)
      captures:
        1: entity.other.attribute-name.icL
        2: string.quoted.single.icL

    - match: \b\d+\b
      scope: constant.numeric.icL

    - match: \b[\w\-\_]+\b
      scope: entity.name.type.icL

    - match: '\['
      push: web_element

    - match: '\]'
      pop: true

  js_code:
    - match: \b(abstract|arguments|await|boolean|break|byte|case|catch|char|class|const|continue|debugger|default|delete|do|double|else|enum|eval|export|extends|false|final|finally|float|for|function|goto|if|implements|import|in|instanceof|int|interface|let|long|native|new|null|package|private|protected|public|return|short|static|super|switch|synchronized|this|throw|throws|transient|true|try|typeof|var|void|volatile|while|with|yield)\b
      scope: keyword.control.icL

    - match: \${[\w\_]+}
      scope: entity.name.function.icL

    - match: (\.[\w\_]+)\s*\(
      captures:
        1: entity.name.function.icL

    - match: \.[\w\_]+
      scope: variable.other.member.icL

    - match: \b(window|document|crossfire)\b
      scope: variable.language

    - match: '{'
      push: js_code

    - match: '"'
      push: string

    - match: '}'
      pop: true
